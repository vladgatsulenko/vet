{% set routeParams = routeParams|default({}) %}

{% if pagination is defined %}
    {% set currentPage = pagination.currentPage %}
    {% set limit = pagination.limit %}
    {% set totalPages = pagination.totalPages %}
    {% set pages = pagination.pages %}
    {% set hasPrevious = pagination.hasPrevious %}
    {% set hasNext = pagination.hasNext %}
    {% set previousPage = pagination.previousPage %}
    {% set nextPage = pagination.nextPage %}
{% else %}
    {% set currentPage = currentPage|default(1) %}
    {% set limit = limit|default(10) %}
    {% set totalPages = totalPages|default(1) %}
    {% set pages = range(1, totalPages) %}
    {% set hasPrevious = currentPage > 1 %}
    {% set hasNext = currentPage < totalPages %}
    {% set previousPage = currentPage > 1 ? currentPage - 1 : null %}
    {% set nextPage = currentPage < totalPages ? currentPage + 1 : null %}
{% endif %}


{% if totalPages <= 1 %}

{% else %}
<nav aria-label="Page navigation">
  <ul class="pagination">
    <li class="page-item {% if not hasPrevious %}disabled{% endif %}">
      <a class="page-link" href="{% if hasPrevious %}{{ path(route, routeParams|merge({'page': previousPage, 'limit': limit})) }}{% else %}#{% endif %}" aria-label="Previous">
        <span aria-hidden="true">&laquo;</span>
      </a>
    </li>

    {% if pages is not defined %}
        {% set pages = range(1, totalPages) %}
    {% endif %}

    {% for p in pages %}
      <li class="page-item {% if p == currentPage %}active{% endif %}">
        <a class="page-link" href="{{ path(route, routeParams|merge({'page': p, 'limit': limit})) }}">{{ p }}</a>
      </li>
    {% endfor %}

    <li class="page-item {% if not hasNext %}disabled{% endif %}">
      <a class="page-link" href="{% if hasNext %}{{ path(route, routeParams|merge({'page': nextPage, 'limit': limit})) }}{% else %}#{% endif %}" aria-label="Next">
        <span aria-hidden="true">&raquo;</span>
      </a>
    </li>
  </ul>
</nav>
{% endif %}
